#!/usr/bin/env bash

# Source error handling, leave this in place
set -x
set -e


source /common.sh


cat << 'EOF' > /sketch/config/sound.ini
#This file allows you to automatically set the volume of all soundcards.
#Set to -1 to disable this behavior.

#Note: The current implementation just tries to set the first 4 cards and skips any errors,
#And it will not affect cards not present at boot
[SetVolume]
volume=0db
EOF

cat << 'EOF' > /usr/bin/ember-manage-audio.py
#!/usr/bin/python3
import subprocess,configparser
import traceback
config = configparser.ConfigParser()
config.read('/sketch/config/sound.ini')

vol = config['SetVolume']['volume']

#interface = config['Onboard']['output'].lower()
#interfaces={
#    "auto": 0,
#    "analog": 1,
#    "hdmi": 2
# }
# interface= interfaces[interface]

#THIS NO LONGER WORKS ON NEW RASPBIAN, YOU INSTEAD GET 2 SEPARATE DEVICES
#try:
#    subprocess.check_call(["amixer", "cset", "numid=3", str(interface)])
#except:
#    print(traceback.format_exc())

noSetVol = False
try:
    vol=int(vol)
    if vol==-1:
        noSetVol=True
except:
    pass

if not noSetVol:
    try:
        subprocess.check_call(["amixer", "-c","0", "cset", "numid=1", str(vol)])
    except:
        print(traceback.format_exc())

    try:
        subprocess.check_call(["amixer","-c","1", "cset", "numid=1", str(vol)])
    except:
        print(traceback.format_exc())

    try:
        subprocess.check_call(["amixer","-c","2", "cset", "numid=1", str(vol)])
    except:
        print(traceback.format_exc())

    try:
        subprocess.check_call(["amixer","-c","3", "cset", "numid=1", str(vol)])
    except:
        print(traceback.format_exc())

EOF

chmod 744 /usr/bin/ember-manage-audio.py



cat << EOF > /etc/systemd/system/ember-manage-audio.service
[Unit]
Description=Manage audio
After=sysinit.target


[Service]
Type=oneshot
ExecStart=/usr/bin/ember-manage-audio.py

[Install]
WantedBy=sysinit.target

EOF

chmod 744  /etc/systemd/system/ember-manage-audio.service
systemctl enable ember-manage-audio.service

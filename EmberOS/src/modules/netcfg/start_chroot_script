#!/bin/bash

# Source error handling, leave this in place
set -x
set -e


source /common.sh


#Mesh neetworking!!!
sudo apt-get -y install dirmngr
#gpg --fetch-keys https://neilalexander.s3.dualstack.eu-west-2.amazonaws.com/deb/key.txt
#gpg --export 569130E8CA20FBC4CB3FDE555898470A764B32C9 | sudo apt-key add -
sudo cp /filesystem/569130E8CA20FBC4CB3FDE555898470A764B32C9.pubkey /etc/apt/trusted.gpg.d/yggdrasil.gpg
echo 'deb http://neilalexander.s3.dualstack.eu-west-2.amazonaws.com/deb/ debian yggdrasil' | sudo tee /etc/apt/sources.list.d/yggdrasil.list

sudo apt-get -y update



# Don't even think about setting this up without
# some serious firewalling(See below, but we still should probably not enable this by default for various reasons)
! systemctl disable yggdrasil

echo "Dummy file, only used as mountpoint" > /etc/yggdrasil.conf
chmod 700 /etc/yggdrasil.conf

#Manually do everything to avoind the postinst script
groupadd --system --force yggdrasil 
#Install after the dummy file, not before
cd /tmp
apt-get download yggdrasil
sudo dpkg --unpack yggdrasil*.deb
sudo rm /var/lib/dpkg/info/yggdrasil.postinst -f
sudo dpkg --configure yggdrasil
sudo apt-get install -yf #To fix dependencies


apt-get -y install network-manager libnss3-tools ca-certificates nftables firewalld avahi-daemon avahi-utils radvd

systemctl enable NetworkManager.service
unpack /filesystem/networkmanager /etc/NetworkManager root



unpack /filesystem/systemd /etc/systemd/system root
unpack /filesystem/bin /usr/bin root

chmod 744 /usr/bin/emberos_netcfg.sh
chmod 755 /usr/bin/nss-systemcerts-import

mkdir -p /etc/pki/nssdb

systemctl enable emberos_netcfg.service


#Copy to sketch folder
mkdir -p /sketch/config/sslcerts
mkdir -p /sketch/config/sslcerts.local
mkdir -p /usr/local/share/ca-certificates

cp  -La /usr/share/ca-certificates/. /sketch/config/sslcerts
cp  -La /usr/local/share/ca-certificates /sketch/config/sslcerts.local

cp  /etc/ca-certificates.conf /sketch/config/ca-certificates.conf


mkdir -p  /sketch/config/firewalld/

mkdir -p /sketch/.emberos/cache/etc.ssl
touch /sketch/.emberos/cache/ssl_tar_md5

mkdir -p /var/lib/blueman
#Bind to /etc
cat << EOF > /sketch/config/filesystem/emberos-netcfg.yaml
/sketch/config/:
   bindfiles:
    sslcerts: /usr/share/ca-certificates/
    sslcerts.local: /usr/local/share/ca-certificates/
    ca-certificates.conf: /etc/ca-certificates.conf

/sketch/config/firewalld/: /etc/firewalld/

__tmpfsoverlay__SSLCERTS:
  bindat: /etc/ssl/
  mode: '0755'
  user: root

__tmpfsoverlay__BLUEMAN:
  bindat: /var/lib/blueman
  mode: '0755'
  user: root
EOF


cat << EOF > /sketch/config/filesystem/emberos-yggdrasil.yaml
/sketch/config.private:
   bindfiles:
    yggdrasil.conf: /etc/yggdrasil.conf
EOF



####################### Setup the firewall ##################################
unpack /filesystem/firewalld /etc/firewalld/ root


mkdir -p  /sketch/config/firewalld/

systemctl enable firewalld.service


#Yggdrasil and cjdns get firewalled to public
#SSH gets blocked from public, we don't want any hacking
mkdir -p /etc/firewalld/zones/
cat << EOF > /etc/firewalld/zones/public.xml
<?xml version="1.0" encoding="utf-8"?>
<zone target="%%REJECT%%">
  <short>Public</short>
  <description>For use in public areas. You do not trust the other computers on networks to not harm your computer. Only selected incoming connections are accepted.</description>
  <source address="300::/8"/>
  <source address="200::/8"/>
  <source address="fc00::/8"/>
  <service name="dhcpv6-client"/>
  <port port="123" protocol="udp"/>
</zone>
EOF


#NTP is just about the only thing that's safe to allow publically in general.
#Even then, it's bad if you have some kind of remote admin enabled.
#firewall-cmd --zone=public --add-port=123/udp --permanent
cp -ar /etc/firewalld/. /sketch/config/firewalld

###### Make NetworkManager sketchified

cat << EOF > /sketch/config/filesystem/emberos_networks.yaml
/sketch/networks/:
    mode: '0600'
    user: root
    bindat: /etc/NetworkManager/system-connections
EOF


# Try to fix the kinds of bugs that are fixable by an Avahi restart
# https://bugs.launchpad.net/ubuntu/+source/avahi/+bug/624043
chmod 755 /usr/bin/restart_avahi.sh
chmod 744 /etc/systemd/system/restart_avahi.service
systemctl enable /etc/systemd/system/restart_avahi.service




unpack /filesystem/avahi /etc/avahi/ root




# Which one? Both? Seems to work!
! systemctl disable dhcpcd.service
! systemctl disable dhcpcd5.service

mkdir -p /sketch/networks
unpack /filesystem/networks /sketch/networks root



#!/usr/bin/env bash
# Base script
# Basic and manditory settings for the base of a CustomPiOS build
# Written by Guy Sheffer <guysoft at gmail dot com>
# GPL V3
########
set -x
set -e

export LC_ALL=C

source /common.sh
install_cleanup_trap

if [ -n "$BASE_APT_PROXY" ]
then
  echo "Acquire::http { Proxy \"http://$BASE_APT_PROXY\"; };" > /etc/apt/apt.conf.d/02octopi_build_proxy
fi

if [ -n "$BASE_PYPI_INDEX" ]
then
  pip_index_config="[global]\nindex-url = $BASE_PYPI_INDEX"
  easyinstall_index_config="[easy_install]\nindex-url = $BASE_PYPI_INDEX"

  mkdir -p /root/.pip
  echo -e "$pip_index_config" > /root/.pip/pip.conf
  echo -e "$easyinstall_index_config" > /root/.pydistutils.cfg

  mkdir -p /home/pi/.pip
  sudo -u pi echo -e "$pip_index_config" > /home/pi/.pip/pip.conf
  sudo -u pi echo -e "$easyinstall_index_config" > /home/pi/.pydistutils.cfg

  echo "Configured pypi index url $BASE_PYPI_INDEX"
  cat /home/pi/.pip/pip.conf
  cat /home/pi/.pydistutils.cfg
fi

if [ "$BASE_SSH_ENABLE" == "yes" ]
then
  touch /boot/ssh
  ### Fix SSH incoming
  echo "IPQoS 0x00" >> /etc/ssh/sshd_config

  ### Fix SSH outgoing
  echo "IPQoS 0x00" >> /etc/ssh/ssh_config
  
  ### Try and fix https://github.com/guysoft/OctoPi/issues/424
  if [ -f "/lib/systemd/system/regenerate_ssh_host_keys.service" ]; then
    sed -i "s@ExecStart=/usr/bin/ssh-keygen -A -v@ExecStart=/bin/bash -c ' /usr/bin/ssh-keygen -A -v >> /var/log/regenerate_ssh_host_keys.log 2>\&1'@g" /lib/systemd/system/regenerate_ssh_host_keys.service
    sed -i "s@ExecStartPost=/bin/systemctl disable regenerate_ssh_host_keys@ExecStartPost=/bin/bash -c 'for i in /etc/ssh/ssh_host_*_key*; do actualsize=\$(wc -c <\"\$i\") ;if [ \$actualsize -eq 0 ]; then echo size is 0 bytes ; exit 1 ; fi ; done ; /bin/systemctl disable regenerate_ssh_host_keys'@g" /lib/systemd/system/regenerate_ssh_host_keys.service
  fi
fi

# Store version buildbase
echo "$CUSTOM_PI_OS_BUILDBASE" > /etc/custompios_buildbase

# Store dist version
echo "$DIST_VERSION" > /etc/${DIST_NAME,,}_version

# Store dist variant
echo "$BUILD_VARIANT" > /etc/dist_variant

##########################
# Raspi-config stuff
# https://github.com/RPi-Distro/raspi-config/blob/master/raspi-config

# Memory split
if [ $BASE_CONFIG_MEMSPLIT != 'default' ]
then
  echo "Configuring memory"
  raspi-config nonint do_memory_split $BASE_CONFIG_MEMSPLIT
fi

#Â timezone
if [ $BASE_CONFIG_TIMEZONE != 'default' ]
then
  echo "Configuring timezone"
  raspi-config nonint do_change_timezone $BASE_CONFIG_TIMEZONE
fi

# locale
if [ $BASE_CONFIG_LOCALE != 'default' ]
then
  echo "Configuring locales"
  raspi-config nonint do_change_locale $BASE_CONFIG_LOCALE
fi

# keybaord
if [ $BASE_CONFIG_KEYBOARD != 'default' ]
then
  echo "Configuring keyboard"
  raspi-config nonint do_configure_keyboard $BASE_CONFIG_KEYBOARD
fi
